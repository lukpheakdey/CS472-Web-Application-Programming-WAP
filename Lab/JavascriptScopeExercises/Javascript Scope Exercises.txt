1. Determine what this Javascript code will print out (without running it):
x = 1;
var a = 5;
var b = 10;
var c = function(a, b, c) {
	var x = 10;
	document.write(x);
	document.write(a);
	var f = function(a, b, c) {
		b = a;
		document.write(b);
		b = c;
		var x = 5;
	}
	f(a,b,c);
	document.write(b);
	 }
c(8,9,10);
document.write(b);
document.write(x);
}
RESULT: 10889101

2. What is the difference between a method and function?
-> A function is a piece of code that is called by name. It can be passed data to operate on (i.e. the parameters) and can optionally return data
A method is a piece of code that is called by a name that is associated with an object. 

3. What does 'this' refer to when used in a Java method?
-> refers to the current object.

4. What does 'this' refer to when used in a JavaScript method?
-> In a function definition, this refers to the "owner" of the function.

5. What does 'this' refer to when used in a JavaScript constructor function?
-> var person = {
    firstName: "John",
    lastName : "Doe",
    id       : 5566,
    fullName : function() {
        return this.firstName + " " + this.lastName;
    }
};
this.firstName means the firstName property of this (person) object.

6. Assume object x is the prototype for object y in Javascript. Object x has a method f( ) containing keyword 'this'.
When f is called by x.f( ), what does 'this' refer to?
-> this will refer to x

7. What is a free variable in JavaScript?
-> Free variables are simply the variables that are neither locally declared nor passed as parameter

8. Create an object that has properties with name = "fred" and major="music" and a property that is a function
that takes 2 numbers and returns the smallest of the two, or the square of the two if they are equal.
->
var myObject = {
            name: "fred",
            major: "music",
            smallest: function (number1, number2) {
                if (number1 < number2)
                    return number1;
                else if (number1 === number2)
                    return number1 * number2;
                else
                    return number2;
            }
        }
9. Write Javascript code for creating three Employee objects using the "new" keyword and a constructor function.
Employee objects have the following fields: name, salary, position.

function Employee(name, salary, position){
	this.name=name;
	this.salary=salary;
	this.position=position;
}

var Jimmy= new Employee("Jimmy","$100000","Sr. Web Developer");
var Tammy= new Employee("Tammy","$80000","Auality Assistance");
var Jack= new Employee("Jack","$150000","Project Manager");